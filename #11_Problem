#include <iostream>
#include <string>

using namespace std;

bool isLeapYear(short Year) 
{
    return (Year % 4 == 0 && Year % 100 != 0) || (Year % 400 == 0);
}

short NumberOfDaysInAMonth(short Month, short Year) 
{
    if (Month < 1 || Month > 12) return 0;

    short days[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };
    return (Month == 2) ? (isLeapYear(Year) ? 29 : 28) : days[Month - 1];

}

short CountNumberOfDaysFromBeginningOfYear(short Day, short Month, short Year)
{

    short SumDays = 0;

    for (short i = 1; i < Month; i++)
    {
        SumDays += NumberOfDaysInAMonth(i, Year);
    }

    SumDays += Day;

    return SumDays;
}

struct StDate
{
    short Year, Month, Day;
};

StDate NumberOfDaysToDate(short DayOrderInYear, short Year)
{
    StDate Date;
    short RemainingDays = DayOrderInYear;
    short MonthDays = 0;

    Date.Year = Year;
    Date.Month = 1;

    while(true)
    {
        MonthDays = NumberOfDaysInAMonth(Date.Month, Year);

        if (RemainingDays > MonthDays)
        {
            RemainingDays -= MonthDays;
            Date.Month++;
        }
        else
        {
            Date.Day = RemainingDays;
            break;
        }
    }

    return Date;
}

short ReadDay()
{
    short Day;
   
    cout << "\nPlease enter a Day? ";
    cin >> Day;

    return Day;
}

short ReadMonth()
{
    short Month;
    do
    {

        cout << "\nPlease enter a Month (1-12)? ";
        cin >> Month;

    } while (Month < 1 || Month > 12);

    return Month;
}

short ReadYear() 
{
    short Year;

    do
    {

        cout << "\nPlease enter a year? ";
        cin >> Year;
        
    } while (Year <= 0);

    return Year;
}



int main() 
{
    short Day = ReadDay();
    short Month = ReadMonth();
    short Year = ReadYear();
    short DayOrderInYear = CountNumberOfDaysFromBeginningOfYear(Day, Month, Year);
    StDate Date = NumberOfDaysToDate(DayOrderInYear, Month, Year);

    cout << "\nNumber of days from the beginning of year is " << CountNumberOfDaysFromBeginningOfYear(Day, Month, Year) << endl;
    cout << "Date for [" << DayOrderInYear << "] is: ";
    cout << Date.Day << "/" << Date.Month << "/" << Date.Year << endl;

    return 0;

}
