#include <iostream>
#include <string>
#include <iomanip>
using namespace std;

bool isLeapYear(short Year)
{
	return (Year % 400 == 0) || (Year % 4 == 0 && Year % 100 != 0);
}

short NumberOfDaysInAMonth(short Month, short Year)
{
	if (Month < 1 || Month > 12)
		return 0;

	short ArrMonthDays[12] = { 31,28,31,30,31,30,31,31,30,31,30,31 };

	return (Month == 2) ? (isLeapYear(Year) ? 29 : 28) : ArrMonthDays[Month - 1];
}

struct StDate 
{
	int Day, Month, Year;
};

bool isLastDayInMonth(StDate Date)
{
	return Date.Day == NumberOfDaysInAMonth(Date.Month, Date.Year);
}

bool isLastMonthInYear(short Month)
{
	return Month == 12;
}

short ReadAdditionalDays()
{
	short Day = 0;
	do
	{

		cout << "\nPlease enter additional day(s)? ";
		cin >> Day;

	} while (Day < 1);

	return Day;
}

short ReadAdditionalWeeks()
{
	short Week = 0;
	do
	{

		cout << "\nPlease enter additional week(s)? ";
		cin >> Week;

	} while (Week < 1);

	return Week;
}

short ReadDay()
{
	short Day = 0;
	do
	{

		cout << "Please enter a day? ";
		cin >> Day;

	} while (Day < 1);

	return Day;
}

StDate DecreaseDateByOneDay(StDate Date)
{
	if (Date.Day == 1)
	{
		if(Date.Month == 1)
		{
			Date.Month = 12;
			Date.Day = 31;
			Date.Year--;
		}
		else
		{
			Date.Month--;
			Date.Day = NumberOfDaysInAMonth(Date.Month, Date.Year);
		}
	}
	else
	{
		Date.Day--;
	}

	return Date;
}

StDate DecreaseDateByOneWeek(StDate Date)
{
	for (short i = 1; i <= 7; i++)
	{
		Date = DecreaseDateByOneDay(Date);
	}
	return Date;
}

StDate DecreaseDateByXWeeks(StDate Date, short SubtractWeeks)
{
	for (short i = 1; i <= SubtractWeeks; i++)
	{
		Date = DecreaseDateByOneWeek(Date);
	}
	return Date;
}

StDate DecreaseDateByOneMonth(StDate Date)
{
	if (Date.Month == 1)
	{
		Date.Month = 12;
		Date.Year--;
	}
	else
	{
		Date.Month--;
	}
	
	short NumberOfDaysInCurrentMonth = NumberOfDaysInAMonth(Date.Month, Date.Year);

	if (Date.Day > NumberOfDaysInCurrentMonth)
	{
		Date.Day = NumberOfDaysInCurrentMonth;
	}

	return Date;
}

StDate DecreaseDateByXDays(StDate Date, short SubtractDays)
{
	for (short i = 1; i <= SubtractDays; i++)
	{
		Date = DecreaseDateByOneDay(Date);
	}
	return Date;
}

StDate DecreaseDateByXMonths(StDate Date, short SubtractMonths)
{
	for (short i = 1; i <= SubtractMonths; i++)
	{
		Date = DecreaseDateByOneMonth(Date);
	}
	return Date;
}

StDate DecreaseDateByOneYear(StDate Date)
{
	Date.Year--;
	return Date;
}

StDate DecreaseDateByXYears(StDate Date, short SubtractYears)
{
	for (short i = 1; i <= SubtractYears; i++)
	{
		Date = DecreaseDateByOneYear(Date);
	}
	return Date;
}

StDate DecreaseDateByXYearsFaster(StDate Date, short SubtractYears)
{
	Date.Year -= SubtractYears;
	return Date;
}

StDate DecreaseDateByOneDecade(StDate Date)
{
	Date.Year -= 10;
	return Date;
}

StDate DecreaseDateByXDecades(StDate Date, short SubtractDecades)
{
	for (short i = 1; i <= SubtractDecades * 10; i++)
	{
		Date = DecreaseDateByOneDecade(Date);
	}
	return Date;
}

StDate DecreaseDateByXDecadesFaster(StDate Date, short SubtractDecades)
{
	Date.Year -= SubtractDecades * 10;
	return Date;
}

StDate DecreaseDateByOneCentury(StDate Date)
{
	Date.Year -= 100;
	return Date;
}

StDate DecreaseDateByOneMillennium(StDate Date)
{
	Date.Year -= 1000;
	return Date;
}

short ReadMonth()
{
	short Month = 0;
	do
	{

		cout << "Please enter a month? ";
		cin >> Month;

	} while (Month < 1 || Month > 12);

	return Month;
}

short ReadAdditionalMonths()
{
	short Month = 0;
	do
	{

		cout << "Please enter additional months? ";
		cin >> Month;

	} while (Month < 1 || Month > 12);

	return Month;
}

short ReadYear()
{
	short Year = 0;
	cout << "Please enter a Year? ";
	cin >> Year;

	cout << endl;
	return Year;
}

short ReadAdditionalYears()
{
	short Year = 0;
	cout << "Please enter additional Years? ";
	cin >> Year;

	cout << endl;
	return Year;
}

short ReadAdditionalDecades()
{
	short Decade = 0;
	cout << "Please enter additional Decades? ";
	cin >> Decade;

	cout << endl;
	return Decade;
}

StDate ReadFullDate()
{
	StDate Date;

	Date.Day = ReadDay();
	Date.Month = ReadMonth();
	Date.Year = ReadYear();

	return Date;
}

int main() 
{

	StDate Date1 = ReadFullDate();

	cout << "\nDate After:\n";

	Date1 = DecreaseDateByOneDay(Date1);
	cout << "\n01 - Subtracting one day: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByXDays(Date1, 10);
	cout << "\n02 - Subtracting 10 days: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByOneWeek(Date1);
	cout << "\n03 - Subtracting one week: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByXWeeks(Date1, 10);
	cout << "\n04 - Subtracting 10 weeks: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByOneMonth(Date1);
	cout << "\n05 - Subtracting one month: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByXMonths(Date1, 5);
	cout << "\n06 - Subtracting 5 months: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByOneYear(Date1);
	cout << "\n07 - Subtracting one year: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByXYears(Date1, 10);
	cout << "\n08 - Subtracting 10 years: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByXYearsFaster(Date1, 10);
	cout << "\n09 - Subtracting 10 years (faster): " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByOneDecade(Date1);
	cout << "\n10 - Subtracting one decade: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByXDecades(Date1, 10);
	cout << "\n11 - Subtracting 10 decades: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByXDecadesFaster(Date1, 10);
	cout << "\n12 - Subtracting 10 decades (faster): " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByOneCentury(Date1);
	cout << "\n13 - Subtracting one century: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	Date1 = DecreaseDateByOneMillennium(Date1);
	cout << "\n14 - Subtracting one millennium: " << Date1.Day << "/" << Date1.Month << "/" << Date1.Year;

	system("pause>0");
	return 0;
}
